/*drop TABLE CLIENTE CASCADE;
drop TABLE CORREO_CLIENTE;
drop TABLE CORREO_EMPLEADO;
drop TABLE EMPLEADO CASCADE;
drop Table TELEFONO_CLIENTE;
drop TABLE TELEFONO_EMPLEADO;
drop TABLE TELEFONO_VIVERO;
DROP TABLE VIVERO CASCADE;
drop TABLE PLANTA CASCADE;
drop TABLE VENTA_FISICA CASCADE;
drop TABLE VENTA_ONLINE CASCADE;
drop TABLE SEMILLA CASCADE;
drop TABLE SEMILLA_GERM CASCADE;
drop TABLE CUIDADO;
drop TABLE FORMA_PAGO;
drop TABLE INSCRIBIR;
drop TABLE PERTENECE;
drop TABLE PRODUCTOR;
drop TABLE REGISTRAR;*/

--Tabla Vivero
CREATE TABLE VIVERO(
	NOMBRE_VIVERO VARCHAR(20),
	TIPO VARCHAR(20),
	FECHA_APERTURA DATE,
	DIRECCION VARCHAR(100)
);

ALTER TABLE VIVERO ADD CONSTRAINT VIVERO_PK
PRIMARY KEY (NOMBRE_VIVERO);

COMMENT ON COLUMN VIVERO.NOMBRE_VIVERO IS 'Nombre del vivero.';
COMMENT ON COLUMN VIVERO.TIPO IS 'Tipo del vivero.';
COMMENT ON COLUMN VIVERO.FECHA_APERTURA IS 'Fecha en la que se abrió el vivero.';
COMMENT ON COLUMN VIVERO.DIRECCION IS 'Direccoón el vivero.';
COMMENT ON TABLE VIVERO IS 'Contiene los datos de cada vivero.';

CREATE TABLE AREA_VIVERO(
	TIPO VARCHAR(20),
	AREA VARCHAR(20)
);

ALTER TABLE AREA_VIVERO ADD CONSTRAINT AREA_VIVERO_PK
PRIMARY KEY (TIPO);

COMMENT ON COLUMN AREA_VIVERO.AREA IS 'Área a la que pertenece el vivero.';
COMMENT ON COLUMN AREA_VIVERO.TIPO IS 'Tipo del vivero.';
COMMENT ON TABLE AREA_VIVERO IS 'Tabla que surge de la normalización de la tabla Vivero. Contiene el Área de este último';

CREATE TABLE TELEFONO_VIVERO(
	NOMBRE_VIVERO VARCHAR(20),
	TELEFONOS INT
);

ALTER TABLE TELEFONO_VIVERO ADD CONSTRAINT TELEFONO_VIVERO_PK
PRIMARY KEY (TELEFONOS);

ALTER TABLE TELEFONO_VIVERO ADD CONSTRAINT TELEFONO_VIVERO_FK
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO);

COMMENT ON COLUMN TELEFONO_VIVERO.NOMBRE_VIVERO IS 'Nombre del vivero al que pertenece el teléfono.';
COMMENT ON COLUMN TELEFONO_VIVERO.TELEFONOS IS 'Teléfono del vivero.';
COMMENT ON TABLE TELEFONO_VIVERO IS 'Contiene los telefonos de un vivero';

--Tabla Empleado
CREATE TABLE EMPLEADO(
	ID_EMPLEADO INT,
	NOMBRE_VIVERO VARCHAR(20),
	NOMBRES VARCHAR(20),
	APELLIDO_PATERNO VARCHAR(20),
	APELLIDO_MATERNO VARCHAR(20),
	SALARIO MONEY,
	DIRECCION VARCHAR(100),
	FECHA_NACIMIENTO DATE,
	FECHA_INGRESO DATE,
	ROL VARCHAR(20)
);

ALTER TABLE EMPLEADO ADD CONSTRAINT EMPLEADO_PK
PRIMARY KEY (ID_EMPLEADO);

ALTER TABLE EMPLEADO ADD CONSTRAINT EMPLEADO_FK
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO);

COMMENT ON COLUMN EMPLEADO.ID_EMPLEADO IS 'Identificador del empleado.';
COMMENT ON COLUMN EMPLEADO.NOMBRE_VIVERO IS 'Nombre del vivero en el que trabaja.';
COMMENT ON COLUMN EMPLEADO.NOMBRES IS 'Nombre(s) del empleado.';
COMMENT ON COLUMN EMPLEADO.APELLIDO_PATERNO IS 'Apellido paterno del empleado.';
COMMENT ON COLUMN EMPLEADO.APELLIDO_MATERNO IS 'Apellido materno del empleado.';
COMMENT ON COLUMN EMPLEADO.SALARIO IS 'Salario del empleado.';
COMMENT ON COLUMN EMPLEADO.DIRECCION IS 'Dirección de la vivienda del empleado.';
COMMENT ON COLUMN EMPLEADO.FECHA_NACIMIENTO IS 'Fecha de nacimiento del empleado.';
COMMENT ON COLUMN EMPLEADO.FECHA_INGRESO IS 'Fecha de ingreso a la empresa del empleado.';
COMMENT ON COLUMN EMPLEADO.ROL IS 'Rol del empleado.';
COMMENT ON TABLE EMPLEADO IS 'Contiene la información de los empleados.';

CREATE TABLE TELEFONO_EMPLEADO(
	ID_EMPLEADO INT,
	TELEFONOS INT
);

ALTER TABLE TELEFONO_EMPLEADO ADD CONSTRAINT TELEFONO_EMPLEADO_PK
PRIMARY KEY (TELEFONOS);

ALTER TABLE TELEFONO_EMPLEADO ADD CONSTRAINT TELEFONO_EMPLEADO_FK
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO);

COMMENT ON COLUMN TELEFONO_EMPLEADO.ID_EMPLEADO IS 'ID del empleado al que pertenecen los teléfonos.';
COMMENT ON COLUMN TELEFONO_EMPLEADO.TELEFONOS IS 'Telefonos del empleado.';
COMMENT ON TABLE TELEFONO_EMPLEADO IS 'Contiente los teléfonos correspondiente a un empledo.';

CREATE TABLE CORREO_EMPLEADO(
	ID_EMPLEADO INT,
	CORREOS VARCHAR(20)
);

ALTER TABLE CORREO_EMPLEADO ADD CONSTRAINT CORREO_EMPLEADO_PK
PRIMARY KEY (CORREOS);

ALTER TABLE CORREO_EMPLEADO ADD CONSTRAINT CORREO_EMPLEADO_FK
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO);

COMMENT ON COLUMN CORREO_EMPLEADO.ID_EMPLEADO IS 'ID del empleado al que pertenecen los correos.';
COMMENT ON COLUMN CORREO_EMPLEADO.CORREOS IS 'Correos del empleado.';
COMMENT ON TABLE CORREO_EMPLEADO IS 'Contiente los correos correspondiente a un empledo.';

--Tabla Cliente
CREATE TABLE CLIENTE(
	ID_CLIENTE INT,
	NOMBRES VARCHAR(20),
	APELLIDO_PATERNO VARCHAR(20),
	APELLIDO_MATERNO VARCHAR(20),
	DIRECCION VARCHAR(100),
	FECHA_NACIMIENTO DATE
);

ALTER TABLE CLIENTE ADD CONSTRAINT CLIENTE_PK
PRIMARY KEY (ID_CLIENTE);

COMMENT ON COLUMN CLIENTE.ID_CLIENTE IS 'Identificador del cliente.';
COMMENT ON COLUMN CLIENTE.NOMBRES IS 'Nombre(s) del cliente.';
COMMENT ON COLUMN CLIENTE.APELLIDO_PATERNO IS 'Apellido paterno del cliente.';
COMMENT ON COLUMN CLIENTE.APELLIDO_MATERNO IS 'Apellido materno del cliente.';
COMMENT ON COLUMN CLIENTE.DIRECCION IS 'Dirección de la vivienda del cliente.';
COMMENT ON COLUMN CLIENTE.FECHA_NACIMIENTO IS 'Fecha de nacimiento del cliente.';
COMMENT ON TABLE CLIENTE IS 'Contiene la información de los clientes.';

CREATE TABLE TELEFONO_CLIENTE(
	ID_CLIENTE INT,
	TELEFONOS INT
);

ALTER TABLE TELEFONO_CLIENTE ADD CONSTRAINT TELEFONO_CLIENTE_PK
PRIMARY KEY (TELEFONOS);

ALTER TABLE TELEFONO_CLIENTE ADD CONSTRAINT TELEFONO_CLIENTE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);

COMMENT ON COLUMN TELEFONO_CLIENTE.ID_CLIENTE IS 'ID del cliente al que pertenecen los teléfonos.';
COMMENT ON COLUMN TELEFONO_CLIENTE.TELEFONOS IS 'Telefonos del cliente.';
COMMENT ON TABLE TELEFONO_CLIENTE IS 'Contiente los teléfonos correspondiente a un cliente.';

CREATE TABLE CORREO_CLIENTE(
	ID_CLIENTE INT,
	CORREOS VARCHAR(20)
);

ALTER TABLE CORREO_CLIENTE ADD CONSTRAINT CORREO_CLIENTE_PK
PRIMARY KEY (CORREOS);

ALTER TABLE CORREO_CLIENTE ADD CONSTRAINT CORREO_CLIENTE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);

COMMENT ON COLUMN CORREO_CLIENTE.ID_CLIENTE IS 'ID del cliente al que pertenecen los correos.';
COMMENT ON COLUMN CORREO_CLIENTE.CORREOS IS 'Correos del cliente.';
COMMENT ON TABLE CORREO_CLIENTE IS 'Contiente los correos correspondiente a un cliente.';

--Tabla Planta
CREATE TABLE PLANTA(
	NOMBRE_PLANTA VARCHAR(20),
	ID_EMPLEADO INT,
	GENERO VARCHAR(20),
	SUSTRATO VARCHAR(20),
	TIPO VARCHAR(20),
	RIEGO VARCHAR(20),
	FECHA_GERMINACION DATE,
	PRECIO MONEY
);

ALTER TABLE PLANTA ADD CONSTRAINT PLANTA_PK
PRIMARY KEY (NOMBRE_PLANTA);

ALTER TABLE PLANTA ADD CONSTRAINT PLANTA_FK
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO);

COMMENT ON COLUMN PLANTA.NOMBRE_PLANTA IS 'Nombre de la planta.';
COMMENT ON COLUMN PLANTA.ID_EMPLEADO IS 'ID del empleado que realiza la venta de la planta.';
COMMENT ON COLUMN PLANTA.GENERO IS 'Género de la planta.';
COMMENT ON COLUMN PLANTA.SUSTRATO IS 'Tipo de sustrato de la planta.';
COMMENT ON COLUMN PLANTA.TIPO IS 'Tipo de la planta: sol, sombra o resolana.';
COMMENT ON COLUMN PLANTA.RIEGO IS 'Tipo de riego de la planta.';
COMMENT ON COLUMN PLANTA.FECHA_GERMINACION IS 'Fecha en la que la planta germinó.';
COMMENT ON COLUMN PLANTA.PRECIO IS 'Precio de la planta.';
COMMENT ON TABLE PLANTA IS 'Contine los datos de una planta.';

CREATE TABLE CUIDADO(
	NOMBRE VARCHAR(20),
	NOMBRE_PLANTA VARCHAR(20)
);

ALTER TABLE CUIDADO ADD CONSTRAINT CUIDADO_PK
PRIMARY KEY (NOMBRE_PLANTA);

ALTER TABLE CUIDADO ADD CONSTRAINT CUIDADO_FK
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA);

COMMENT ON COLUMN CUIDADO.NOMBRE IS 'Nombre del cuidado al que se refiere.';
COMMENT ON COLUMN CUIDADO.NOMBRE_PLANTA IS 'Nombre de la planta que se cuida.';
COMMENT ON TABLE CUIDADO IS 'Contiene los cuidados referentes a una planta.';

--Tabla pertenece (Relación entre Planta y Vivero)
CREATE TABLE PERTENECE(
	NOMBRE_PLANTA VARCHAR(20),
	NOMBRE_VIVERO VARCHAR(20),
	CANTIDAD INT
);

ALTER TABLE PERTENECE ADD CONSTRAINT PERTENECE_PK
PRIMARY KEY (NOMBRE_PLANTA);

ALTER TABLE PERTENECE ADD CONSTRAINT PERTENECE_FK1
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA);

ALTER TABLE PERTENECE ADD CONSTRAINT PERTENECE_FK2
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO);

COMMENT ON COLUMN PERTENECE.NOMBRE_PLANTA IS 'Nombre de la planta.';
COMMENT ON COLUMN PERTENECE.NOMBRE_VIVERO IS 'Nombre del vivero al que pertenece la planta.';
COMMENT ON COLUMN PERTENECE.CANTIDAD IS 'Cantidad de plantas que hay en el vivero.';
COMMENT ON TABLE PERTENECE IS 'Contiene los datos de la referencia pertenece entre Planta y Vivero.';

--Tabla de Venta Física
CREATE TABLE VENTA_FISICA(
	ID_VENTA INT,
	ID_EMPLEADO_COBRAR INT,
	NOMBRE_VIVERO VARCHAR(20),
	ID_CLIENTE INT,
	ID_EMPLEADO_AYUDAR INT,
	NUMERO_PRODUCTOS INT,
	PRECIO_A_PAGAR_DESGLOSE MONEY,
	TOTAL MONEY,
	FECHA DATE
);

ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_PK
PRIMARY KEY (ID_VENTA);

ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK1
FOREIGN KEY (ID_EMPLEADO_COBRAR) REFERENCES EMPLEADO(ID_EMPLEADO);

ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK2
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO);

ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK3
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);

ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK4
FOREIGN KEY (ID_EMPLEADO_AYUDAR) REFERENCES EMPLEADO(ID_EMPLEADO);

COMMENT ON COLUMN VENTA_FISICA.ID_VENTA IS 'ID de la venta.';
COMMENT ON COLUMN VENTA_FISICA.ID_EMPLEADO_COBRAR IS 'ID del empleado que realizó la venta.';
COMMENT ON COLUMN VENTA_FISICA.NOMBRE_VIVERO IS 'Nombre del vivero en el que se realizó la venta.';
COMMENT ON COLUMN VENTA_FISICA.ID_CLIENTE IS 'ID del cliente que realizó la compra.';
COMMENT ON COLUMN VENTA_FISICA.ID_EMPLEADO_AYUDAR IS 'ID del empleado que ayudó al cliente en su compra.';
COMMENT ON COLUMN VENTA_FISICA.NUMERO_PRODUCTOS IS 'Número de productos que se compraron.';
COMMENT ON COLUMN VENTA_FISICA.PRECIO_A_PAGAR_DESGLOSE IS 'Precio subtotal a pagar por los productos.';
COMMENT ON COLUMN VENTA_FISICA.TOTAL IS 'Precio total a pagar por los articulos.';
COMMENT ON COLUMN VENTA_FISICA.FECHA IS 'Fecha donde se realizó la venta.';
COMMENT ON TABLE VENTA_FISICA IS 'Contiene los datos de una venta física.';

--Tabla Registrar (Relación entre Planta y Venta Física)
CREATE TABLE REGISTRAR(
	ID_VENTA INT,
	NOMBRE_PLANTA VARCHAR(20)
);

ALTER TABLE REGISTRAR ADD CONSTRAINT REGISTRAR_PK
PRIMARY KEY (ID_VENTA,NOMBRE_PLANTA);

ALTER TABLE REGISTRAR ADD CONSTRAINT REGISTRAR_FK1
FOREIGN KEY (ID_VENTA) REFERENCES VENTA_FISICA(ID_VENTA);

ALTER TABLE REGISTRAR ADD CONSTRAINT REGISTRAR_FK2
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA);

COMMENT ON COLUMN REGISTRAR.ID_VENTA IS 'ID de la venta física.';
COMMENT ON COLUMN REGISTRAR.NOMBRE_PLANTA IS 'Nombre de la planta que se registra en la venta.';
COMMENT ON TABLE REGISTRAR IS 'Relación que vincula a una venta física con las plantas compradas.';

--Tabla de Venta Online
CREATE TABLE VENTA_ONLINE(
	NUMERO_SEGUIMIENTO INT,
	FECHA DATE,
	ID_CLIENTE INT,
	ID_EMPLEADO_COBRAR INT,
	NUMERO_PRODUCTOS INT,
	PRECIO_A_PAGAR_DESGLOSE MONEY,
	TOTAL MONEY
);

ALTER TABLE VENTA_ONLINE ADD CONSTRAINT VENTA_ONLINE_PK
PRIMARY KEY (NUMERO_SEGUIMIENTO);

ALTER TABLE VENTA_ONLINE ADD CONSTRAINT VENTA_ONLINE_FK1
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);

ALTER TABLE VENTA_ONLINE ADD CONSTRAINT VENTA_ONLINE_FK2
FOREIGN KEY (ID_EMPLEADO_COBRAR) REFERENCES EMPLEADO(ID_EMPLEADO);

COMMENT ON COLUMN VENTA_ONLINE.NUMERO_SEGUIMIENTO IS 'Número de seguimiento de la venta.';
COMMENT ON COLUMN VENTA_ONLINE.FECHA IS 'Fecha en la que se realizó la venta.';
COMMENT ON COLUMN VENTA_ONLINE.ID_CLIENTE IS 'ID del cliente que realizó la compra.';
COMMENT ON COLUMN VENTA_ONLINE.ID_EMPLEADO_COBRAR IS 'ID del empleado que realizó la compra.';
COMMENT ON COLUMN VENTA_ONLINE.NUMERO_PRODUCTOS IS 'Número de productos que se compraron.';
COMMENT ON COLUMN VENTA_ONLINE.PRECIO_A_PAGAR_DESGLOSE IS 'Precio subtotal a pagar por los productos.';
COMMENT ON COLUMN VENTA_ONLINE.TOTAL IS 'Precio total a pagar por los articulos.';
COMMENT ON TABLE VENTA_ONLINE IS 'Contiene los datos de una Venta Online.';

CREATE TABLE DIRECCION_ONLINE(
	ID_CLIENTE INT,
	DIRECCION VARCHAR(100)
);

ALTER TABLE DIRECCION_ONLINE ADD CONSTRAINT DIRECCION_ONLINE_PK
PRIMARY KEY (ID_CLIENTE,DIRECCION);

ALTER TABLE DIRECCION_ONLINE ADD CONSTRAINT DIRECCION_ONLINE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE);

COMMENT ON COLUMN DIRECCION_ONLINE.DIRECCION IS 'Dirección a la que se envía en producto.';
COMMENT ON COLUMN DIRECCION_ONLINE.ID_CLIENTE IS 'ID del cliente que realizó la compra.';
COMMENT ON TABLE DIRECCION_ONLINE IS 'Relación resultante de la normalización de Venta_Online. Contiene la dirección a la que se envía la compra, no necesariamente el domicilio del cliente.';

--Tabla Inscribir (Relación entre Planta y Venta Online)
CREATE TABLE INSCRIBIR(
	NUMERO_SEGUIMIENTO INT,
	NOMBRE_PLANTA VARCHAR(20)
);

ALTER TABLE INSCRIBIR ADD CONSTRAINT INSCRIBIR_PK
PRIMARY KEY (NUMERO_SEGUIMIENTO,NOMBRE_PLANTA);

ALTER TABLE INSCRIBIR ADD CONSTRAINT INSCRIBIR_FK1
FOREIGN KEY (NUMERO_SEGUIMIENTO) REFERENCES VENTA_ONLINE(NUMERO_SEGUIMIENTO);

ALTER TABLE INSCRIBIR ADD CONSTRAINT INSCRIBIR_FK2
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA);

COMMENT ON COLUMN INSCRIBIR.NUMERO_SEGUIMIENTO IS 'ID de la venta online.';
COMMENT ON COLUMN INSCRIBIR.NOMBRE_PLANTA IS 'Nombre de la planta que se registra en la venta.';
COMMENT ON TABLE INSCRIBIR IS 'Relación que vincula a una venta online con las plantas compradas.';

--Tabla Forma_Pago_Fisica
CREATE TABLE FORMA_PAGO_FISICA(
	ID_VENTA INT,
	NOMBRE_FORMA_PAGO VARCHAR(20)
);

ALTER TABLE FORMA_PAGO_FISICA ADD CONSTRAINT FORMA_PAGO_FISICA_FK1
FOREIGN KEY (ID_VENTA) REFERENCES VENTA_FISICA(ID_VENTA);

COMMENT ON COLUMN FORMA_PAGO_FISICA.ID_VENTA IS 'ID de la venta física.';
COMMENT ON COLUMN FORMA_PAGO_FISICA.NOMBRE_FORMA_PAGO IS 'Nombre de la forma de pago qeu se utilizará en la venta.';
COMMENT ON TABLE FORMA_PAGO_FISICA IS 'Resultado de la normalización de Forma_Pago. Contiene los datos de la forma de pago en una venta.';

--Tabla Desglose_Venta
CREATE TABLE DESGLOSE_VENTA(
	ID_VENTA INT,
	FORMA_PAGO VARCHAR(20),
	PAGO MONEY
);

ALTER TABLE DESGLOSE_VENTA ADD CONSTRAINT DESGLOSE_VENTA_FK1
FOREIGN KEY (ID_VENTA) REFERENCES VENTA_FISICA(ID_VENTA);

COMMENT ON COLUMN DESGLOSE_VENTA.ID_VENTA IS 'ID de la venta física.';
COMMENT ON COLUMN DESGLOSE_VENTA.FORMA_PAGO IS 'Nombre de la forma de pago qeu se utilizará en la venta.';
COMMENT ON COLUMN DESGLOSE_VENTA.PAGO IS 'Precio a pagar.';
COMMENT ON TABLE DESGLOSE_VENTA IS 'Tabla que tiene el objetivo de almacenar las diferentes combinaciones de pago en una venta.';

--Tabla Forma_Pago_Online
CREATE TABLE FORMA_PAGO_ONLINE(
	NUMERO_SEGUIMIENTO INT,
	NOMBRE_FORMA_PAGO VARCHAR(20)
);

ALTER TABLE FORMA_PAGO_ONLINE ADD CONSTRAINT FORMA_PAGO_ONLINE_FK1
FOREIGN KEY (NUMERO_SEGUIMIENTO) REFERENCES VENTA_ONLINE(NUMERO_SEGUIMIENTO);

COMMENT ON COLUMN FORMA_PAGO_ONLINE.NUMERO_SEGUIMIENTO IS 'Número de seguimiento de la venta online.';
COMMENT ON COLUMN FORMA_PAGO_ONLINE.NOMBRE_FORMA_PAGO IS 'Nombre de la forma de pago qeu se utilizará en la venta.';
COMMENT ON TABLE FORMA_PAGO_ONLINE IS 'Resultado de la normalización de la relación Forma_Pago. Contiene los datos de la forma de pago en una venta online.';

--Tabla Ejemplares Productores
CREATE TABLE PRODUCTOR(
	NOMBRE_PRODUCTOR VARCHAR(20),
	NOMBRE_PLANTA VARCHAR(20),
	ULTIMA_FUM DATE,
	ULTIMA_FERT DATE,
	ULTIMO_RIEGO DATE,
	FECHA_ADQ DATE
);

ALTER TABLE PRODUCTOR ADD CONSTRAINT PRODUCTOR_PK
PRIMARY KEY (NOMBRE_PRODUCTOR);

ALTER TABLE PRODUCTOR ADD CONSTRAINT PRODUCTOR_FK1
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA);

COMMENT ON COLUMN PRODUCTOR.NOMBRE_PRODUCTOR IS 'Nombre del ejemplar productor.';
COMMENT ON COLUMN PRODUCTOR.NOMBRE_PLANTA IS 'Nombre de planta del ejemplar productor.';
COMMENT ON COLUMN PRODUCTOR.ULTIMA_FUM IS 'Última fumigación registrada del ejemplar productor.';
COMMENT ON COLUMN PRODUCTOR.ULTIMA_FERT IS 'Última fertilización registrada del ejemplar reproductor.';
COMMENT ON COLUMN PRODUCTOR.ULTIMO_RIEGO IS 'Último riego registrado del ejemplar reproductor.';
COMMENT ON COLUMN PRODUCTOR.FECHA_ADQ IS 'Fecha de adquisición del ejemplar productor.';
COMMENT ON TABLE PRODUCTOR IS 'Resultado de la normalización de la tabla productor. Contiene los datos de los ejemplares productores.';

--Tabla Paraja Productor
CREATE TABLE PAREJA_PRODUCTOR(
	NOMBRE_PRODUCTOR VARCHAR(20),
	NOMBRE_PLANTA VARCHAR(20),
	NOMBRE_PROD_REP VARCHAR(20)
);

ALTER TABLE PAREJA_PRODUCTOR ADD CONSTRAINT PAREJA_PRODUCTOR_PK
PRIMARY KEY (NOMBRE_PROD_REP);

ALTER TABLE PAREJA_PRODUCTOR ADD CONSTRAINT PRODUCTOR_FK1
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA);

ALTER TABLE PAREJA_PRODUCTOR ADD CONSTRAINT PRODUCTOR_FK2
FOREIGN KEY (NOMBRE_PRODUCTOR) REFERENCES PRODUCTOR(NOMBRE_PRODUCTOR);

COMMENT ON COLUMN PAREJA_PRODUCTOR.NOMBRE_PRODUCTOR IS 'Nombre del ejemplar productor.';
COMMENT ON COLUMN PAREJA_PRODUCTOR.NOMBRE_PLANTA IS 'Nombre de planta del ejemplar productor.';
COMMENT ON COLUMN PAREJA_PRODUCTOR.NOMBRE_PROD_REP IS 'Nombre del ejemplar reproductor con el cual el ejemplar actual se reproducirá.';
COMMENT ON TABLE PAREJA_PRODUCTOR IS 'Resultado de la normalización. Contiene los datos de los ejemplares productores.';

--Tabla Semilla
CREATE TABLE SEMILLA(
	ID_SEMILLA INT,
	CANTIDAD_OBT INT,
	FECHA_POL DATE,
	NOMBRE_PRODUCTOR VARCHAR(20)
);

ALTER TABLE SEMILLA ADD CONSTRAINT SEMILLA_PK
PRIMARY KEY (ID_SEMILLA);

ALTER TABLE SEMILLA ADD CONSTRAINT SEMILLA_FK
FOREIGN KEY (NOMBRE_PRODUCTOR) REFERENCES PRODUCTOR(NOMBRE_PRODUCTOR);

COMMENT ON COLUMN SEMILLA.ID_SEMILLA IS 'ID de semilla';
COMMENT ON COLUMN SEMILLA.CANTIDAD_OBT IS 'Cantidad de semillas obtenidas.';
COMMENT ON COLUMN SEMILLA.FECHA_POL IS 'Fecha de polinización de la semilla.';
COMMENT ON COLUMN SEMILLA.NOMBRE_PRODUCTOR IS 'Nombre del ejemplar productor que generó la semilla.';
COMMENT ON TABLE SEMILLA IS 'Contiene los datos de las semillas.';

--Tabla de semilla germinada
CREATE TABLE SEMILLA_GERM(
	ID_SEMILLA INT,
	ORIGEN VARCHAR(20),
	ULTIMA_FUM DATE,
	ULTIMA_FERT DATE,
	ULTIMO_RIEGO DATE,
	FECHA_SIEMBRA DATE,
	CANTIDAD_OBT INT
);
ALTER TABLE SEMILLA_GERM ADD CONSTRAINT SEMILLA_GERM_PK
PRIMARY KEY (ID_SEMILLA);

ALTER TABLE SEMILLA_GERM ADD CONSTRAINT SEMILLA_GERM_FK
FOREIGN KEY (ID_SEMILLA) REFERENCES SEMILLA(ID_SEMILLA);

COMMENT ON COLUMN SEMILLA_GERM.ID_SEMILLA IS 'ID de la semilla.';
COMMENT ON COLUMN SEMILLA_GERM.ORIGEN IS 'Origen de la semilla.';
COMMENT ON COLUMN SEMILLA_GERM.ULTIMA_FUM IS 'Última fumigación registrada de la semilla germinada.';
COMMENT ON COLUMN SEMILLA_GERM.ULTIMA_FERT IS 'Última fertilización registrada de la semilla germinada.';
COMMENT ON COLUMN SEMILLA_GERM.ULTIMO_RIEGO IS 'Último riego registrado de la semilla germinada.';
COMMENT ON COLUMN SEMILLA_GERM.FECHA_SIEMBRA IS 'Fecha de adquisición de la semilla germinada.';
COMMENT ON TABLE SEMILLA_GERM IS 'Contiene los datos de las semillas germinadas.';

-- VIVERO

ALTER TABLE VIVERO ADD CONSTRAINT NOMBRE_NO_NULO
CHECK (NOMBRE_VIVERO IS NOT NULL);

--TELEFONO_VIVERO

ALTER TABLE TELEFONO_VIVERO DROP CONSTRAINT TELEFONO_VIVERO_FK;

ALTER TABLE TELEFONO_VIVERO ADD CONSTRAINT TELEFONO_VIVERO_FK
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO) ON DELETE CASCADE;

--AREA_VIVERO
ALTER TABLE AREA_VIVERO ADD CONSTRAINT CHK_AREA
CHECK (AREA IN ('Plantas africanas', 'Cactus'));

ALTER TABLE AREA_VIVERO ADD CONSTRAINT CHK_TIPO
CHECK (TIPO IN ('Haworthia', 'Gasteria', 'Astrophytum', 'Ariocarpus'));

--EMPLEADO

CREATE SEQUENCE SQ_EMPLEADO
MINVALUE 0
START WITH 0
INCREMENT BY 1
OWNED BY EMPLEADO.ID_EMPLEADO;

ALTER TABLE EMPLEADO ALTER COLUMN ID_EMPLEADO SET DEFAULT NEXTVAL('SQ_EMPLEADO');

ALTER TABLE EMPLEADO DROP CONSTRAINT EMPLEADO_FK;

ALTER TABLE EMPLEADO ADD CONSTRAINT EMPLEADO_FK
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO) ON DELETE CASCADE;

ALTER TABLE EMPLEADO ADD CONSTRAINT UN_SOLO_VIVERO
UNIQUE(NOMBRE_VIVERO,ID_EMPLEADO);

ALTER TABLE EMPLEADO ADD CONSTRAINT ID_NO_NULO
CHECK (ID_EMPLEADO IS NOT NULL);

ALTER TABLE EMPLEADO ADD CONSTRAINT NOMBRE_EMP_NO_NULO
CHECK (NOMBRES IS NOT NULL);

ALTER TABLE EMPLEADO ADD CONSTRAINT CHK_PUESTO
CHECK (ROL IN ('Gerente', 'Cuidador', 'Cajero', 'Encargado'));

ALTER TABLE EMPLEADO ADD CONSTRAINT CHK_EDAD
CHECK (EXTRACT(YEAR FROM AGE(FECHA_NACIMIENTO)) >= 18);

--TELEFONO_EMPLEADO
ALTER TABLE TELEFONO_EMPLEADO DROP CONSTRAINT TELEFONO_EMPLEADO_FK;

ALTER TABLE TELEFONO_EMPLEADO ADD CONSTRAINT TELEFONO_EMPLEADO_FK
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE;

--CORREO_EMPLEADO
ALTER TABLE CORREO_EMPLEADO DROP CONSTRAINT CORREO_EMPLEADO_FK;

ALTER TABLE CORREO_EMPLEADO ADD CONSTRAINT CORREO_EMPLEADO_FK
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE;

ALTER TABLE CORREO_EMPLEADO ADD CONSTRAINT CHK_CORREO
CHECK (CORREOS LIKE '%@%.%');

--CLIENTE
CREATE SEQUENCE SQ_CLIENTE
MINVALUE 0
START WITH 0
INCREMENT BY 1
OWNED BY CLIENTE.ID_CLIENTE;

ALTER TABLE CLIENTE ALTER COLUMN ID_CLIENTE SET DEFAULT NEXTVAL('SQ_CLIENTE');

ALTER TABLE CLIENTE ADD CONSTRAINT ID_C_NO_NULO
CHECK (ID_CLIENTE IS NOT NULL);

ALTER TABLE CLIENTE ADD CONSTRAINT NOMBRE_C_NO_NULO
CHECK (NOMBRES IS NOT NULL);

ALTER TABLE CLIENTE ADD CONSTRAINT CHK_EDAD_CLIENTE
CHECK (EXTRACT(YEAR FROM AGE(FECHA_NACIMIENTO)) >= 18);

--TELEFONO_CLIENTE
ALTER TABLE TELEFONO_CLIENTE DROP CONSTRAINT TELEFONO_CLIENTE_FK;

ALTER TABLE TELEFONO_CLIENTE ADD CONSTRAINT TELEFONO_CLIENTE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE;

--CORREO_CLIENTE
ALTER TABLE CORREO_CLIENTE DROP CONSTRAINT CORREO_CLIENTE_FK;

ALTER TABLE CORREO_CLIENTE ADD CONSTRAINT CORREO_CLIENTE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE;

ALTER TABLE CORREO_CLIENTE ADD CONSTRAINT CHK_CORREO_CLIENTE
CHECK (CORREOS LIKE '%@%.%');

--PLANTA
ALTER TABLE PLANTA DROP CONSTRAINT PLANTA_FK;

ALTER TABLE PLANTA ADD CONSTRAINT PLANTA_FK
FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE;

ALTER TABLE PLANTA ADD CONSTRAINT CHK_TIPO
CHECK (TIPO IN ('Sol', 'Sombra','Resolana'));

--CUIDADO
ALTER TABLE CUIDADO DROP CONSTRAINT CUIDADO_FK;

ALTER TABLE CUIDADO ADD CONSTRAINT CUIDADO_FK
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA) ON DELETE CASCADE;

--PERTENECE
ALTER TABLE PERTENECE ADD CONSTRAINT CHK_PERTENECE_CANTIDAD
CHECK (CANTIDAD >0);

ALTER TABLE PERTENECE DROP CONSTRAINT PERTENECE_FK1;

ALTER TABLE PERTENECE ADD CONSTRAINT PERTENECE_FK1
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA) ON DELETE CASCADE;

ALTER TABLE PERTENECE DROP CONSTRAINT PERTENECE_FK2;

ALTER TABLE PERTENECE ADD CONSTRAINT PERTENECE_FK2
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO) ON DELETE CASCADE;

--VENTA_FISICA
ALTER TABLE VENTA_FISICA ADD CONSTRAINT CHK_NUMERO_PROD_VENTA_F
CHECK (NUMERO_PRODUCTOS > 0);

ALTER TABLE VENTA_FISICA DROP CONSTRAINT VENTA_FISICA_FK1;
ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK1
FOREIGN KEY (ID_EMPLEADO_COBRAR) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE;

ALTER TABLE VENTA_FISICA DROP CONSTRAINT VENTA_FISICA_FK2;
ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK2
FOREIGN KEY (NOMBRE_VIVERO) REFERENCES VIVERO(NOMBRE_VIVERO) ON DELETE CASCADE;

ALTER TABLE VENTA_FISICA DROP CONSTRAINT VENTA_FISICA_FK3;
ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK3
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE;

ALTER TABLE VENTA_FISICA DROP CONSTRAINT VENTA_FISICA_FK4;
ALTER TABLE VENTA_FISICA ADD CONSTRAINT VENTA_FISICA_FK4
FOREIGN KEY (ID_EMPLEADO_AYUDAR) REFERENCES EMPLEADO(ID_EMPLEADO) ON DELETE CASCADE;

--REGISTRAR
ALTER TABLE REGISTRAR DROP CONSTRAINT REGISTRAR_FK1;
ALTER TABLE REGISTRAR ADD CONSTRAINT REGISTRAR_FK1
FOREIGN KEY (ID_VENTA) REFERENCES VENTA_FISICA(ID_VENTA) ON DELETE CASCADE;

ALTER TABLE REGISTRAR DROP CONSTRAINT REGISTRAR_FK2;
ALTER TABLE REGISTRAR ADD CONSTRAINT REGISTRAR_FK2
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA) ON DELETE CASCADE;

--VENTA_ONLINE
ALTER TABLE VENTA_ONLINE ADD CONSTRAINT CHK_NUMERO_PROD_VENTA_O
CHECK (NUMERO_PRODUCTOS > 0);

ALTER TABLE VENTA_ONLINE DROP CONSTRAINT VENTA_ONLINE_FK;
ALTER TABLE VENTA_ONLINE ADD CONSTRAINT VENTA_ONLINE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE;

--DIRECCION_ONLINE
ALTER TABLE DIRECCION_ONLINE DROP CONSTRAINT DIRECCION_ONLINE_FK;
ALTER TABLE DIRECCION_ONLINE ADD CONSTRAINT DIRECCION_ONLINE_FK
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) ON DELETE CASCADE;

--INSCRIBIR
ALTER TABLE INSCRIBIR DROP CONSTRAINT INSCRIBIR_FK1;
ALTER TABLE INSCRIBIR ADD CONSTRAINT INSCRIBIR_FK1
FOREIGN KEY (NUMERO_SEGUIMIENTO) REFERENCES VENTA_ONLINE(NUMERO_SEGUIMIENTO) ON DELETE CASCADE;

ALTER TABLE INSCRIBIR DROP CONSTRAINT INSCRIBIR_FK2;
ALTER TABLE INSCRIBIR ADD CONSTRAINT INSCRIBIR_FK2
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA) ON DELETE CASCADE;

--FORMA_PAGO_FISICA
ALTER TABLE FORMA_PAGO_FISICA DROP CONSTRAINT FORMA_PAGO_FISICA_FK1;
ALTER TABLE FORMA_PAGO_FISICA ADD CONSTRAINT FORMA_PAGO_FISICA_FK1
FOREIGN KEY (ID_VENTA) REFERENCES VENTA_FISICA(ID_VENTA) ON DELETE CASCADE;

ALTER TABLE FORMA_PAGO_FISICA ADD CONSTRAINT CHK_FORMA_PAGO_F
CHECK (NOMBRE_FORMA_PAGO IN ('efectivo', 'credito', 'debito'));

--FORMA_PAGO_ONLINE
ALTER TABLE FORMA_PAGO_ONLINE DROP CONSTRAINT FORMA_PAGO_ONLINE_FK1;
ALTER TABLE FORMA_PAGO_ONLINE ADD CONSTRAINT FORMA_PAGO_ONLINE_FK1
FOREIGN KEY (NUMERO_SEGUIMIENTO) REFERENCES VENTA_ONLINE(NUMERO_SEGUIMIENTO) ON DELETE CASCADE;

ALTER TABLE FORMA_PAGO_ONLINE ADD CONSTRAINT CHK_FORMA_PAGO_O
CHECK (NOMBRE_FORMA_PAGO IN ('credito', 'debito'));

--PRODUCTOR
ALTER TABLE PRODUCTOR ADD CONSTRAINT NOMBRE_P_NN_PROD
CHECK (NOMBRE_PLANTA IS NOT NULL);

ALTER TABLE PRODUCTOR DROP CONSTRAINT PRODUCTOR_FK1;
ALTER TABLE PRODUCTOR ADD CONSTRAINT PRODUCTOR_FK1
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA) ON DELETE CASCADE;

--PAREJA_PRODUCTOR
ALTER TABLE PAREJA_PRODUCTOR DROP CONSTRAINT PRODUCTOR_FK1;
ALTER TABLE PAREJA_PRODUCTOR ADD CONSTRAINT PRODUCTOR_FK1
FOREIGN KEY (NOMBRE_PLANTA) REFERENCES PLANTA(NOMBRE_PLANTA) ON DELETE CASCADE;

ALTER TABLE PAREJA_PRODUCTOR DROP CONSTRAINT PRODUCTOR_FK2;
ALTER TABLE PAREJA_PRODUCTOR ADD CONSTRAINT PRODUCTOR_FK2
FOREIGN KEY (NOMBRE_PROD_REP) REFERENCES PRODUCTOR(NOMBRE_PRODUCTOR) ON DELETE CASCADE;

--SEMILLA
CREATE SEQUENCE SQ_SEMILLA
MINVALUE 0
START WITH 0
INCREMENT BY 1
OWNED BY SEMILLA.ID_SEMILLA;

ALTER TABLE SEMILLA ALTER COLUMN ID_SEMILLA SET DEFAULT NEXTVAL('SQ_SEMILLA');

ALTER TABLE SEMILLA DROP CONSTRAINT SEMILLA_FK;
ALTER TABLE SEMILLA ADD CONSTRAINT SEMILLA_FK
FOREIGN KEY (NOMBRE_PRODUCTOR) REFERENCES PRODUCTOR(NOMBRE_PRODUCTOR) ON DELETE CASCADE;

ALTER TABLE SEMILLA ADD CONSTRAINT CHK_SEMILLA_CANTIDAD_OBT
CHECK (CANTIDAD_OBT > 0);

--SEMILLA_GERM
ALTER TABLE SEMILLA_GERM DROP CONSTRAINT SEMILLA_GERM_FK;
ALTER TABLE SEMILLA_GERM ADD CONSTRAINT SEMILLA_GERM_FK
FOREIGN KEY (ID_SEMILLA) REFERENCES SEMILLA(ID_SEMILLA) ON DELETE CASCADE;

ALTER TABLE SEMILLA_GERM ALTER COLUMN ORIGEN SET NOT NULL;
